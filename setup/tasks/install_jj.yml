---
- name: Install jujutsu
  block:
  - name: Get github release for jj
    community.general.github_release:
      user: jj-vcs
      repo: jj
      action: latest_release
    register: jj_release

  - name: Create temporary jj download directory
    ansible.builtin.tempfile:
      state: directory
      suffix: build
    register: jj_tmp_dir

  - name: Setting jj temp dir (checked mode)
    ansible.builtin.set_fact:
      jj_tmp_dir:
        path: /tmp/jj-download
        skipped: true
    when: jj_tmp_dir is skipped


  - name: Setting jj version facts
    ansible.builtin.set_fact:
      jj_version: "{{ jj_release.tag }}"
      jj_filename: jj-{{ jj_release.tag }}-{{ ansible_facts['architecture'] }}-unknown-linux-musl
      jj_install_dir: "{{ ansible_facts['env']['HOME'] }}/.local/bin"

  - name: Setting jj install facts
    ansible.builtin.set_fact:
      jj_install_path: "{{ jj_install_dir }}/jj"
      jj_download_path: "{{ jj_tmp_dir.path }}/jj"
      jj_download_url: "https://github.com/jj-vcs/jj/releases/download/{{ jj_version }}/{{ jj_filename }}.tar.gz"


  - name: Install jj
    ansible.builtin.debug:
      msg:
      - "jj version: {{ jj_version }}"
      - "jj download path: {{ jj_download_path }}"
      - "jj download link: {{ jj_download_url }}"
      - "jj install path: {{ jj_install_path }}"

  - name: Download/unarchive Package for jj
    ansible.builtin.unarchive:
      src: "{{ jj_download_url }}"
      dest: "{{ jj_tmp_dir.path }}"
      remote_src: yes
      creates: "{{ jj_tmp_dir.path }}/{{ jj_filename }}"
    when: not jj_tmp_dir is skipped

  - name: Copy jj to local bin
    ansible.builtin.copy:
      src: "{{ jj_download_path }}"
      dest: "{{ jj_install_path }}"
      mode: '0755'
    when: not jj_tmp_dir is skipped
